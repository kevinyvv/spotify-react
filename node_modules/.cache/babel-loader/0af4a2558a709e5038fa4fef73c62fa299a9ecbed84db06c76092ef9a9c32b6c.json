{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/spotify-react/src/Components/TopSongs.jsx\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Authorize from './authorize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopSongs = () => {\n  _s();\n  const [token, setToken] = useState(\"\");\n\n  // gets token from local storage by splitting hash at accesstoken value\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n    setToken(token);\n  }, []);\n  const [tops, setTops] = useState([]);\n  async function topTracks(timerange, nsongs) {\n    const {\n      data\n    } = await axios.get(`https://api.spotify.com/v1/me/top/tracks?time_range=${timerange}&limit=${nsongs}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const top_songs = data.items.map(({\n      name,\n      artists\n    }) => `${name} by ${artists.map(artist => artist.name).join(', ')}`);\n    const top_songs_id = data.items.map(({\n      id\n    }) => `${id}`);\n    setTops(data.items);\n  }\n  const renderTops = () => {\n    return tops.map(items => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [index, \":\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: items.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), \"by\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [items.artists[0].name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, items.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid justify-center my-4 space-y-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold\",\n      children: \" Step 1: Get your top songs \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        topTracks(\"short_term\", 5);\n      },\n      className: \"rounded-md bg-[#1DB954] py-2 px-2 font-bold text-xl\",\n      children: \" Get Top Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-black\",\n      children: \" Please login to your Spotify account first. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }, this), renderTops()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n_s(TopSongs, \"XabQgBHkVFsz/lQ7synWDffeeEI=\");\n_c = TopSongs;\nexport default TopSongs;\n\n/*\n  const [searchKey, setSearchKey] = useState(\"\")\n  const [artists, setArtists] = useState([])\n\n  const searchArtists = async (e) => {\n    e.preventDefault()\n    const {data} = await axios.get(\"http://api.spotify.com/v1/search\", {\n        headers: {\n            Authorization: `Bearer ${token}`\n        },\n        params: {\n            q: searchKey,\n            type: \"artist\"\n        }\n    })\n\n    setArtists(data.artists.items)\n  }\n\n  const renderArtists = () => {\n    return artists.map(artist => (\n        <div key={artist.id}>\n            {artist.images.length ? <img width={\"100%\"} src={artist.images[0].url} alt=\"\"/> : <div>No Image</div>}\n            {artist.name}\n        </div>\n    ))\n  }\n  */\nvar _c;\n$RefreshReg$(_c, \"TopSongs\");","map":{"version":3,"names":["logo","useEffect","useState","axios","Authorize","jsxDEV","_jsxDEV","TopSongs","_s","token","setToken","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","tops","setTops","topTracks","timerange","nsongs","data","get","headers","Authorization","top_songs","items","map","name","artists","artist","join","top_songs_id","id","renderTops","children","index","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/kevin/spotify-react/src/Components/TopSongs.jsx"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Authorize from './authorize';\n\n\nconst TopSongs = () => {\n  const [token, setToken] = useState(\"\")\n\n// gets token from local storage by splitting hash at accesstoken value\n  useEffect(() => {\n    const hash = window.location.hash\n    let token = window.localStorage.getItem(\"token\")\n\n    if (!token && hash) {\n        token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\n\n        window.location.hash = \"\"\n        window.localStorage.setItem(\"token\", token)\n    }\n\n    setToken(token)\n\n  }, [])\n\n  const [tops, setTops] = useState([])\n\n  async function topTracks(timerange, nsongs){\n    const {data} = await axios.get(`https://api.spotify.com/v1/me/top/tracks?time_range=${timerange}&limit=${nsongs}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }) \n    const top_songs = data.items.map(({name, artists}) => `${name} by ${artists.map(artist=>artist.name).join(', ')}`)\n    const top_songs_id = data.items.map(({id})=> `${id}`)\n    setTops(data.items)\n  }\n\n  const renderTops = () => {\n    return tops.map(items => (\n        <div key={items.id}>\n          {index}: \n          <p>{items.name}</p>\n             by \n          <p>{items.artists[0].name} </p>\n        </div>\n    ))\n  }\n\n  return(\n      <div className='grid justify-center my-4 space-y-16'>\n        <h1 className='text-3xl font-bold'> Step 1: Get your top songs </h1>\n            {token ?\n              <button onClick={() => {topTracks(\"short_term\", 5)}}\n              className='rounded-md bg-[#1DB954] py-2 px-2 font-bold text-xl'> Get Top Songs\n              </button>\n                : <h2 className='text-black'> Please login to your Spotify account first. </h2>\n              }\n              {renderTops()}\n        </div>\n  )\n}\n\nexport default TopSongs;\n\n\n\n/*\n  const [searchKey, setSearchKey] = useState(\"\")\n  const [artists, setArtists] = useState([])\n\n  const searchArtists = async (e) => {\n    e.preventDefault()\n    const {data} = await axios.get(\"http://api.spotify.com/v1/search\", {\n        headers: {\n            Authorization: `Bearer ${token}`\n        },\n        params: {\n            q: searchKey,\n            type: \"artist\"\n        }\n    })\n\n    setArtists(data.artists.items)\n  }\n\n  const renderArtists = () => {\n    return artists.map(artist => (\n        <div key={artist.id}>\n            {artist.images.length ? <img width={\"100%\"} src={artist.images[0].url} alt=\"\"/> : <div>No Image</div>}\n            {artist.name}\n        </div>\n    ))\n  }\n  */\n\n\n  "],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACED,SAAS,CAAC,MAAM;IACd,MAAMU,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACF,IAAI;IACjC,IAAIF,KAAK,GAAGG,MAAM,CAACE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAEhD,IAAI,CAACN,KAAK,IAAIE,IAAI,EAAE;MAChBF,KAAK,GAAGE,IAAI,CAACK,SAAS,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,cAAc,CAAC,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAEhGL,MAAM,CAACC,QAAQ,CAACF,IAAI,GAAG,EAAE;MACzBC,MAAM,CAACE,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;IAC/C;IAEAC,QAAQ,CAACD,KAAK,CAAC;EAEjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEpC,eAAesB,SAASA,CAACC,SAAS,EAAEC,MAAM,EAAC;IACzC,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAE,uDAAsDH,SAAU,UAASC,MAAO,EAAC,EAAE;MACjHG,OAAO,EAAE;QACPC,aAAa,EAAG,UAASrB,KAAM;MACjC;IACF,CAAC,CAAC;IACF,MAAMsB,SAAS,GAAGJ,IAAI,CAACK,KAAK,CAACC,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAO,CAAC,KAAM,GAAED,IAAK,OAAMC,OAAO,CAACF,GAAG,CAACG,MAAM,IAAEA,MAAM,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,IAAI,CAAE,EAAC,CAAC;IAClH,MAAMC,YAAY,GAAGX,IAAI,CAACK,KAAK,CAACC,GAAG,CAAC,CAAC;MAACM;IAAE,CAAC,KAAK,GAAEA,EAAG,EAAC,CAAC;IACrDhB,OAAO,CAACI,IAAI,CAACK,KAAK,CAAC;EACrB;EAEA,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAOlB,IAAI,CAACW,GAAG,CAACD,KAAK,iBACjB1B,OAAA;MAAAmC,QAAA,GACGC,KAAK,EAAC,GACP,eAAApC,OAAA;QAAAmC,QAAA,EAAIT,KAAK,CAACE;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,MAEnB,eAAAxC,OAAA;QAAAmC,QAAA,GAAIT,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI,EAAC,GAAC;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,GAJvBd,KAAK,CAACO,EAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CACR,CAAC;EACJ,CAAC;EAED,oBACIxC,OAAA;IAAKyC,SAAS,EAAC,qCAAqC;IAAAN,QAAA,gBAClDnC,OAAA;MAAIyC,SAAS,EAAC,oBAAoB;MAAAN,QAAA,EAAC;IAA4B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/DrC,KAAK,gBACJH,OAAA;MAAQ0C,OAAO,EAAEA,CAAA,KAAM;QAACxB,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;MAAA,CAAE;MACpDuB,SAAS,EAAC,qDAAqD;MAAAN,QAAA,EAAC;IAChE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBACLxC,OAAA;MAAIyC,SAAS,EAAC,YAAY;MAAAN,QAAA,EAAC;IAA6C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEhFN,UAAU,CAAC,CAAC;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAAAtC,EAAA,CAvDKD,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AAyDd,eAAeA,QAAQ;;AAIvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}