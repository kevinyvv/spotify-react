{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/spotify-react/src/Components/TopSongs.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, createContext, useContext } from 'react';\nimport axios from 'axios';\nimport Authorize from './authorize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopSongs = props => {\n  _s();\n  const [token, setToken] = useState(\"\");\n\n  // gets token from local storage by splitting hash at accesstoken value\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n    setToken(token);\n  }, []);\n  const [tops, setTops] = useState([]);\n  async function topTracks(timerange, nsongs) {\n    const {\n      data\n    } = await axios.get(`https://api.spotify.com/v1/me/top/tracks?time_range=${timerange}&limit=${nsongs}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const top_songs = data.items.map(({\n      name,\n      artists\n    }) => `${name} by ${artists.map(artist => artist.name).join(', ')}`);\n    let top_songs_id = data.items.map(({\n      id\n    }) => `${id}`);\n    props.handleCallback(top_songs_id);\n    setTops(data.items);\n  }\n  const renderTops = () => {\n    return tops.map(items => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex space-x-8 justify-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: items.album.images[2].url,\n          className: \"rounded-lg mx-8 scale-150 col-span-2 h-2/3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"col-span-1 space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold\",\n            children: [items.name + ' ', \" by \", items.artists[0].name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            src: items.preview_url,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, items.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" justify-center my-4 space-y-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold\",\n      children: \" Step 1: Get your top songs \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        topTracks(\"short_term\", 5);\n      },\n      className: \"rounded-md bg-[#1DB954] py-2 px-2 font-bold text-xl hover:scale-105 hover:bg-[#2bde6a]\",\n      children: \" Get Top Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-black\",\n      children: \" Please login to your Spotify account first. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), renderTops()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n};\n_s(TopSongs, \"XabQgBHkVFsz/lQ7synWDffeeEI=\");\n_c = TopSongs;\nexport default TopSongs;\n\n/*\n  const [searchKey, setSearchKey] = useState(\"\")\n  const [artists, setArtists] = useState([])\n\n  const searchArtists = async (e) => {\n    e.preventDefault()\n    const {data} = await axios.get(\"http://api.spotify.com/v1/search\", {\n        headers: {\n            Authorization: `Bearer ${token}`\n        },\n        params: {\n            q: searchKey,\n            type: \"artist\"\n        }\n    })\n\n    setArtists(data.artists.items)\n  }\n\n  const renderArtists = () => {\n    return artists.map(artist => (\n        <div key={artist.id}>\n            {artist.images.length ? <img width={\"100%\"} src={artist.images[0].url} alt=\"\"/> : <div>No Image</div>}\n            {artist.name}\n        </div>\n    ))\n  }\n  */\nvar _c;\n$RefreshReg$(_c, \"TopSongs\");","map":{"version":3,"names":["useEffect","useState","createContext","useContext","axios","Authorize","jsxDEV","_jsxDEV","TopSongs","props","_s","token","setToken","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","tops","setTops","topTracks","timerange","nsongs","data","get","headers","Authorization","top_songs","items","map","name","artists","artist","join","top_songs_id","id","handleCallback","renderTops","className","children","src","album","images","url","fileName","_jsxFileName","lineNumber","columnNumber","controls","preview_url","onClick","_c","$RefreshReg$"],"sources":["/Users/kevin/spotify-react/src/Components/TopSongs.jsx"],"sourcesContent":["\nimport {useEffect, useState, createContext, useContext} from 'react';\nimport axios from 'axios';\nimport Authorize from './authorize';\n\n\nconst TopSongs = (props) => {\n  const [token, setToken] = useState(\"\")\n\n// gets token from local storage by splitting hash at accesstoken value\n  useEffect(() => {\n    const hash = window.location.hash\n    let token = window.localStorage.getItem(\"token\")\n\n    if (!token && hash) {\n        token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\n\n        window.location.hash = \"\"\n        window.localStorage.setItem(\"token\", token)\n    }\n\n    setToken(token)\n\n  }, [])\n\n  const [tops, setTops] = useState([])\n\n  async function topTracks(timerange, nsongs){\n    const {data} = await axios.get(`https://api.spotify.com/v1/me/top/tracks?time_range=${timerange}&limit=${nsongs}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }) \n    const top_songs = data.items.map(({name, artists}) => `${name} by ${artists.map(artist=>artist.name).join(', ')}`)\n    let top_songs_id = data.items.map(({id})=> `${id}`)\n    props.handleCallback(top_songs_id)\n    setTops(data.items)\n  }\n\n  const renderTops = () => {\n    return tops.map((items) => (\n        <div key={items.id} className='grid grid-cols-3 justify-center'>\n          <span className='flex space-x-8 justify-left'>\n          <img src = {items.album.images[2].url} className='rounded-lg mx-8 scale-150 col-span-2 h-2/3'/>\n          <span className='col-span-1 space-y-4'>\n          <p className='font-bold'>{items.name + ' '} by {items.artists[0].name} </p>\n          <audio controls src = {items.preview_url}> </audio>\n          </span>\n          {/* add play function*/}\n          </span>\n        </div>\n    ))\n  }\n\n  return(\n      <div className=' justify-center my-4 space-y-16'>\n        <h1 className='text-3xl font-bold'> Step 1: Get your top songs </h1>\n            {token ?\n              <button onClick={() => {topTracks(\"short_term\", 5)}}\n              className='rounded-md bg-[#1DB954] py-2 px-2 font-bold text-xl hover:scale-105 hover:bg-[#2bde6a]'> Get Top Songs\n              </button>\n                : <h2 className='text-black'> Please login to your Spotify account first. </h2>\n              }\n              {renderTops()}\n        </div>\n  )\n}\n\nexport default TopSongs;\n\n\n\n/*\n  const [searchKey, setSearchKey] = useState(\"\")\n  const [artists, setArtists] = useState([])\n\n  const searchArtists = async (e) => {\n    e.preventDefault()\n    const {data} = await axios.get(\"http://api.spotify.com/v1/search\", {\n        headers: {\n            Authorization: `Bearer ${token}`\n        },\n        params: {\n            q: searchKey,\n            type: \"artist\"\n        }\n    })\n\n    setArtists(data.artists.items)\n  }\n\n  const renderArtists = () => {\n    return artists.map(artist => (\n        <div key={artist.id}>\n            {artist.images.length ? <img width={\"100%\"} src={artist.images[0].url} alt=\"\"/> : <div>No Image</div>}\n            {artist.name}\n        </div>\n    ))\n  }\n  */\n\n\n  "],"mappings":";;AACA,SAAQA,SAAS,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAO,OAAO;AACpE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACED,SAAS,CAAC,MAAM;IACd,MAAMa,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACF,IAAI;IACjC,IAAIF,KAAK,GAAGG,MAAM,CAACE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAEhD,IAAI,CAACN,KAAK,IAAIE,IAAI,EAAE;MAChBF,KAAK,GAAGE,IAAI,CAACK,SAAS,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,cAAc,CAAC,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAEhGL,MAAM,CAACC,QAAQ,CAACF,IAAI,GAAG,EAAE;MACzBC,MAAM,CAACE,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;IAC/C;IAEAC,QAAQ,CAACD,KAAK,CAAC;EAEjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEpC,eAAeyB,SAASA,CAACC,SAAS,EAAEC,MAAM,EAAC;IACzC,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAE,uDAAsDH,SAAU,UAASC,MAAO,EAAC,EAAE;MACjHG,OAAO,EAAE;QACPC,aAAa,EAAG,UAASrB,KAAM;MACjC;IACF,CAAC,CAAC;IACF,MAAMsB,SAAS,GAAGJ,IAAI,CAACK,KAAK,CAACC,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAO,CAAC,KAAM,GAAED,IAAK,OAAMC,OAAO,CAACF,GAAG,CAACG,MAAM,IAAEA,MAAM,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,IAAI,CAAE,EAAC,CAAC;IAClH,IAAIC,YAAY,GAAGX,IAAI,CAACK,KAAK,CAACC,GAAG,CAAC,CAAC;MAACM;IAAE,CAAC,KAAK,GAAEA,EAAG,EAAC,CAAC;IACnDhC,KAAK,CAACiC,cAAc,CAACF,YAAY,CAAC;IAClCf,OAAO,CAACI,IAAI,CAACK,KAAK,CAAC;EACrB;EAEA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAOnB,IAAI,CAACW,GAAG,CAAED,KAAK,iBAClB3B,OAAA;MAAoBqC,SAAS,EAAC,iCAAiC;MAAAC,QAAA,eAC7DtC,OAAA;QAAMqC,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAC7CtC,OAAA;UAAKuC,GAAG,EAAIZ,KAAK,CAACa,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;UAACL,SAAS,EAAC;QAA4C;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC/F9C,OAAA;UAAMqC,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACtCtC,OAAA;YAAGqC,SAAS,EAAC,WAAW;YAAAC,QAAA,GAAEX,KAAK,CAACE,IAAI,GAAG,GAAG,EAAC,MAAI,EAACF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI,EAAC,GAAC;UAAA;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC3E9C,OAAA;YAAO+C,QAAQ;YAACR,GAAG,EAAIZ,KAAK,CAACqB,WAAY;YAAAV,QAAA,EAAC;UAAC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED;IAAC,GARCnB,KAAK,CAACO,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASb,CACR,CAAC;EACJ,CAAC;EAED,oBACI9C,OAAA;IAAKqC,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CtC,OAAA;MAAIqC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAA4B;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/D1C,KAAK,gBACJJ,OAAA;MAAQiD,OAAO,EAAEA,CAAA,KAAM;QAAC9B,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;MAAA,CAAE;MACpDkB,SAAS,EAAC,wFAAwF;MAAAC,QAAA,EAAC;IACnG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBACL9C,OAAA;MAAIqC,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAA6C;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEhFV,UAAU,CAAC,CAAC;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAAA3C,EAAA,CA5DKF,QAAQ;AAAAiD,EAAA,GAARjD,QAAQ;AA8Dd,eAAeA,QAAQ;;AAIvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}